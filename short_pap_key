#!/usr/bin/env bash

# sbvars() dhelp() {{{

gvar(){
  $hm/wrk/p/mktex.pl --var $1 
}

sbvars(){
# {{{
s_purpose=" ... script purpose ..."
s_project=" ~/scripts"

# name of this script 
export this_script=` basename $0 `
# directory where this script resides
export shd="`dirname $(readlink -f $0)`"
# getting variables script - gvar() refers to mktex.pl
export bibfile=`gvar bibfile`
export bibstyle=`gvar bibstyle`

export kfile="keys.i.dat"
export proj="pap"
export method="usebbl"

vim_opts="-n -p"
v="vim $vim_opts"
gitdirs=( "config" "scripts" "templates" "vrt" "install" "coms" "cit" )

# }}}
}

sbvars

dhelp(){
# {{{
# general beginning part {{{
cat << EOF
=============================================
SCRIPT NAME: $this_script 
PROJECT: $s_project
PURPOSE: $s_purpose
USAGE: $this_script [ OPTIONS ] 

	OPTIONS:

	============
	General
	============

			display the help message

	vm		v(iew) m(yself), i.e., edit this script
	-g		gvim invocation
	
	============
EOF
# }}}
# actual interesting part {{{
cat << EOF

	Default values:

		Method:		 $method
		Project: 	 $proj

EXAMPLE:
	short_pap_key --proj $proj --pkey GuoThirumalai95 
	On output, one obtains:
		GT95
		which is the short key for GuoThirumalai95
EOF
# }}}
# final general part {{{
cat << EOF
REMARKS:
AUTHOR: O. Poplavskyy
SCRIPT LOCATION:
	$0
=============================================
EOF
# }}}
# }}}
}

[ -z "$*" ] && ( dhelp; exit 0 )

#}}}

main(){
  #{{{
bibt=bibt.$pkey
kfiles=( "keys.i.dat" $proj.bbl $bibt.bbl )

for kfile in ${kfiles[@]}; do
  	case $kfile in
	  	"keys.i.dat") 
				cat $kfile | awk "/$pkey/ { print \$1}" > tmp.$bibt.sk  
				sk=`cat tmp.$bibt.sk`
				if [ ! -z "$sk" ]; then 
					echo $sk | awk ' { print $1 } ' 
					exit 0
				fi
				;;
		*.bbl) 
			if [ -f "$kfile" ]; then 
			   # use existing bbl file  {{{
				perl -ne "if ( /^\\\\bibitem\\[(\w+)(\W+?.*?|.*?)([0-9]+)\\]{$pkey}/ ){ print \"\$1\$3\n\";}" $kfile > tmp.$bibt.sk 
				sk=`cat tmp.$bibt.sk`
				if [ ! -z "$sk" ]; then 
					echo "$sk"
					exit 0
				fi	  
			  # }}}
			else
			    # no bbl file {{{
			  	# if no bbl-file exists, do latex bibtex to 
				# produce one
				if [ "$kfile" == "$bibt.bbl" ]; then
					bbl_file="$bibt.bbl"
					tmp="tmp.$bibt.tex"
					#cat << EOF > $tmp ... {{{
cat << EOF > $tmp
\\documentclass{report}

\\begin{document}
\\cite{$pkey}
\\input{jnames}
\\bibliographystyle{$bibstyle}
\\bibliography{$bibfile}
\\end{document}
EOF
#}}}
					#now latex & bibtex on $tmp; then extract the short key  {{{
	  				ltm --infile $tmp >& /dev/null
					mv tmp.$bibt.bbl $bibt.bbl
					perl -ne "if ( /^\\\\bibitem\\[(\w+)(\W+?.*?|.*?)([0-9]+)\\]{$pkey}/ ){ print \"\$1\$3\n\";}" $kfile > tmp.$bibt.sk 
					sk=`cat tmp.$bibt.sk`
					if [ ! -z "$sk" ]; then 
						echo "$sk"
						exit 0
					fi	  
					rm -f tmp.$bibt.*
				  	#}}}
	  #}}}
				fi
			  fi
		;;
  	esac
done
#}}}
}

# main part 
# {{{

script_opts=( $* )

# read cmd args => main()  {{{
while [ ! -z "$1" ]; do
  	case "$1" in
		  #{{{
	  	vm) $v $0 $hm/scripts/f.sh; exit ;;
		h) dhelp $*; exit ;;
		-g) v="$v -g" ;;
		--proj) export proj=$2; shift ;;
		--pkey) export pkey=$2; shift ;;
		--m) export method=$2; shift ;;
		*) ;;
		  #*) main $* && exit 0 ;;
	esac
  	shift
        #}}}
done

main 

# }}}
