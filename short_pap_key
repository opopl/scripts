#!/usr/bin/env bash

# sbvars() dhelp() {{{

sbvars(){
# {{{
s_purpose=" ... script purpose ..."
s_project=" ~/scripts"

# name of this script 
export this_script=` basename $0 `
# directory where this script resides
export shd="`dirname $(readlink -f $0)`"

export kfile="keys.i.dat"
export proj="pap"
export method="usebbl"

vim_opts="-n -p"
v="vim $vim_opts"
gitdirs=( "config" "scripts" "templates" "vrt" "install" "coms" "cit" )

# }}}
}

sbvars

dhelp(){
# {{{
# general beginning part {{{
cat << EOF
=============================================
SCRIPT NAME: $this_script 
PROJECT: $s_project
PURPOSE: $s_purpose
USAGE: $this_script [ OPTIONS ] 

	OPTIONS:

	============
	General
	============

			display the help message

	vm		v(iew) m(yself), i.e., edit this script
	-g		gvim invocation
	
	============
EOF
# }}}
# actual interesting part {{{
cat << EOF

	Default values:

		Method:		 $method
		Project: 	 $proj

EXAMPLE:
	short_pap_key --proj $proj --pkey GuoThirumalai95 
	On output, one obtains:
		GT95
		which is the short key for GuoThirumalai95
EOF
# }}}
# final general part {{{
cat << EOF
REMARKS:
AUTHOR: O. Poplavskyy
SCRIPT LOCATION:
	$0
=============================================
EOF
# }}}
# }}}
}

[ -z "$*" ] && ( dhelp; exit 0 )

#}}}

main(){

kfiles ( "keys.i.dat" $proj.bbl )
sk=`cat $kfile | awk "/$pkey/ { print \$1}"  `
;;
kfile="$proj.bbl"
perl -ne "if ( /^\\\\bibitem\\[(\w+)(\W+?.*?|.*?)([0-9]+)\\]{$pkey}/ ){ print \"\$1\$3\n\";}" $kfile
;; 
esac
done

}

# main part 
# {{{

script_opts=( $* )

# read cmd args => main()  {{{
while [ ! -z "$1" ]; do
  	case "$1" in
		  #{{{
	  	vm) $v $0 $hm/scripts/f.sh; exit ;;
		h) dhelp $*; exit ;;
		-g) v="$v -g" ;;
		--proj) export proj=$2; shift ;;
		--pkey) export pkey=$2; shift ;;
		--m) export method=$2; shift ;;
		*) ;;
		  #*) main $* && exit 0 ;;
	esac
  	shift
        #}}}
done

main 

# }}}
