#!/usr/bin/env bash

# sbvars() dhelp() {{{

sbvars(){
# {{{
s_purpose=" convert the short paper key to its long one"
s_project=" ~/scripts"

# name of this script 
export this_script=` basename $0 `
# directory where this script resides
export shd="`dirname $(readlink -f $0)`"

export kfile="keys.i.dat"
export proj="pap"

vim_opts="-n -p"
v="vim $vim_opts"
gitdirs=( "config" "scripts" "templates" "vrt" "install" "coms" "cit" )

# }}}
}

sbvars

dhelp(){
# {{{
# general beginning part {{{
cat << EOF
=============================================
SCRIPT NAME: $this_script 
PROJECT: $s_project
PURPOSE: $s_purpose
USAGE: $this_script [ OPTIONS ] 

	OPTIONS:

	============
	General
	============

			display the help message

	vm		v(iew) m(yself), i.e., edit this script
	-g		gvim invocation
	
	============
EOF
# }}}
# actual interesting part {{{
cat << EOF

DEFAULTS:
	Project:	
		$proj
EOF
# }}}
# final general part {{{
cat << EOF
REMARKS:
AUTHOR: O. Poplavskyy
SCRIPT LOCATION:
	$0
=============================================
EOF
# }}}
# }}}
}

[ -z "$*" ] && ( dhelp; exit 0 )

#}}}

main(){
#{{{
bibt=bibt.$pkey
kfile="keys.i.dat"
lowkey=`echo $pkey | tr '[:upper:]' '[:lower:]' `
awk "tolower(\$1) ~ /$lowkey/ { print NR }" $kfile > tmp.nr
num=`cat tmp.nr`
rm -f tmp.nr

if [ ! -z "$num" ]; then
	cat $kfile | awk "NR==$num { print \$2} "
else
  	kfile="$bibt.bbl"
	if [ ! -f "$kfile" ]; then 
			    # no bbl file {{{
			  	# if no bbl-file exists, do latex bibtex to 
				# produce one
				bbl_file="$bibt.bbl"
				tmp="tmp.$bibt.tex"
					#cat << EOF > $tmp ... {{{
cat << EOF > $tmp
\\documentclass{report}

\\begin{document}
\\cite{$pkey}
\\input{jnames}
\\bibliographystyle{$bibstyle}
\\bibliography{$bibfile}
\\end{document}
EOF
#}}}
					#now latex & bibtex on $tmp; then extract the short key  {{{
	  				ltm --infile $tmp >& /dev/null
					mv tmp.$bibt.bbl $bibt.bbl
					rm -f tmp.$bibt.*
				  	#}}}
	  #}}}
	fi
		wnkey=`echo $pkey | sed 's/[0-9]*$//g' `
		echo $wnkey
        perl -ne "if ( /^\\\\bibitem\\[$wnkey.*?[0-9]+\\]{(.*)}/i ){ print \"\$1\n\";}" $kfile > tmp.$bibt.lk
		lk=`cat tmp.$bibt.lk`
		if [ ! -z "$lk" ]; then 
			echo "$lk"
			exit 0
		fi
fi
#}}}
}

# main part 
# {{{

script_opts=( $* )

# read cmd args => main()  {{{
while [ ! -z "$1" ]; do
  	case "$1" in
		  #{{{
	  	vm) $v $0 $hm/scripts/f.sh; exit ;;
		--pkey) export pkey=$2; shift ;;
		h) dhelp $*; exit ;;
		-g) v="$v -g" ;;
	  	*) main $* && exit 0 ;;
	esac
  	shift
        #}}}
done

# }}}


