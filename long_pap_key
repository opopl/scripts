#!/usr/bin/env bash

# sbvars() dhelp() {{{

sbvars(){
# {{{
s_purpose=" convert the short paper key to its long one"
s_project=" ~/scripts"

# name of this script 
export this_script=` basename $0 `
# directory where this script resides
export shd="`dirname $(readlink -f $0)`"

export kfile="keys.i.dat"
export proj="pap"

vim_opts="-n -p"
v="vim $vim_opts"
gitdirs=( "config" "scripts" "templates" "vrt" "install" "coms" "cit" )

# }}}
}

sbvars

dhelp(){
# {{{
# general beginning part {{{
cat << EOF
=============================================
SCRIPT NAME: $this_script 
PROJECT: $s_project
PURPOSE: $s_purpose
USAGE: $this_script [ OPTIONS ] 

	OPTIONS:

	============
	General
	============

			display the help message

	vm		v(iew) m(yself), i.e., edit this script
	-g		gvim invocation
	
	============
EOF
# }}}
# actual interesting part {{{
cat << EOF

DEFAULTS:
	Project:	
		$proj
EOF
# }}}
# final general part {{{
cat << EOF
REMARKS:
AUTHOR: O. Poplavskyy
SCRIPT LOCATION:
	$0
=============================================
EOF
# }}}
# }}}
}

[ -z "$*" ] && ( dhelp; exit 0 )

#}}}

main(){
#{{{
bibt=bibt.$pkey
kfile="keys.i.dat"
lowkey=`echo $pkey | tr '[:upper:]' '[:lower:]' `
awk "tolower(\$2) ~ /$lowkey/ { print NR }" $kfile > tmp.nr
num=`cat tmp.nr`
rm -f tmp.nr

if [ ! -z "$num" ]; then
	cat $kfile | awk "NR==$num { print \$1} "
else
  	kfile="$proj.bbl"
	if [ -f $kfile  ]; then 
		wnkey=`echo $pkey | sed 's/[0-9]*$//g' `
    	perl -ne "if ( /^\\\\bibitem\\[$wnkey.*?[0-9]+\\]{(.*)}/i ){ print \"\$1\n\";}" $kfile > tmp.$bibt.lk
		lk=`cat tmp.$bibt.lk`
		if [ ! -z "$lk" ]; then 
			echo "$lk"
			exit 0
		fi
	fi
fi
#}}}
}

# main part 
# {{{

script_opts=( $* )

# read cmd args => main()  {{{
if [ ! -z "$1" ]; then 
	while [ ! -z "$1" ]; do
	  	case "$1" in
			  #{{{
		  	vm) $v $0 $hm/scripts/f.sh; exit ;;
			--pkey) export pkey=$2; shift ;;
			h) dhelp $*; exit ;;
			-g) v="$v -g" ;;
		esac
	  	shift
	        #}}}
	done
	main && exit 0
fi
	  	

# }}}


