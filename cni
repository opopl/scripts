#!/usr/bin/env bash

# sbvars() dhelp() {{{

sbvars(){
# {{{
s_purpose="convert between different image formats"
s_project="~/scripts"
# directory where this script resides
export shd="`dirname $(readlink -f $0)`"
# name of this script 
export this_script=` basename $0 `

vim_opts="-n -p"
v="vim $vim_opts"

iexts=( gif png bmp jpg )
export picdir=$PWD
export iext=gif
export oext=eps
export outdir=$picdir/

# }}}
}

sbvars

dhelp(){
# general  {{{
cat << EOF
=============================================
SCRIPT NAME: $this_script 
PROJECT: ~/wrk/rep
PURPOSE: convert images between different formats
USAGE: $this_script STRING

	OPTIONS:

	============
	General
	============

			display the help message

	vm		v(iew) m(yself), i.e., edit this script
	
	============
EOF
# }}}
# script-specific part {{{
cat << EOF

	rq Q		convert images in the current directory into new ones 
				with reduced quality Q (in range 1-100). 
				Output images are stored in the directory called lowQ/

	-pd --picdir	Specify directory with images. 
						Default: $picdir

	-od	--outdir DIR 
					Specify an output directory for the 
						converted images.
						Default: $outdir 

	-i EXT		specify input image files extension

REMARKS:
SCRIPT LOCATION:
	$0
=============================================
EOF
# }}}
}

[ -z "$*" ] && ( dhelp; exit 0 )
# }}}

main(){
# {{{

# read cmd args {{{
while [ ! -z "$1" ]; do

case "$1" in
  -pd|--picdir) export picdir=$2; shift ;;
  rq) # produce images with reduced quality {{{
  	  # quality in the range 1..100
	  quality=$2
	  dir=$picdir/Q$quality
	  mkdir -p $dir
	  cd $picdir
	  #find $picdir -maxdepth 1 -iname '*jpg' -exec convert -quality $quality {} $dir/{} \; 
	  find . -maxdepth 1 -iname '*jpg' -exec convert -quality $quality {} $dir/{} \; 
	  exit 0;
  ;;
	# }}}
	-i) iexts=( $2 ) ; shift ;;
	-od|--outdir) outdir=$2; shift ;;
  *)  ;;
esac    
shift

done
#}}}
# convert {{{
cd $picdir

for iext in ${iexts[@]}; do 
  	files=( ` ack -f *.$iext ` )
	for file in ${files[@]}; do
  		fname=${file%.*}
  		fext=${file##*.}
		convert $file $fname.$oext
	done
done
cd -
#}}}

# }}}
}

# main part 
# {{{

script_opts=( $* )

while [ ! -z "$1" ]; do
  	case "$1" in
		  #{{{
	  	vm) $v $0; exit ;;
		h) dhelp $*; exit ;;
	  	*) main $* && exit 0 ;;
	esac
  	shift
        #}}}
done

# }}}




