#!/usr/bin/env bash

# sbvars() dhelp() {{{

sbvars(){
#{{{
# directory where this script resides
export shd="`dirname $(readlink -f $0)`"
# name of this script 
export this_script=` basename $0 `
# shell file with functions
export fsh="$hm/scripts/f.sh"
export bfile=`mktex.pl --var bibfile `.bib

vim_opts="-n -p"
v="vim $vim_opts"

# }}}
}

sbvars
source $fsh

dhelp(){
# general part {{{
cat << EOF
=============================================
SCRIPT NAME: $this_script 
PROJECT: 
	~/scripts/
PURPOSE: 
	script for working with BibTeX files
USAGE: $this_script [ OPTIONS ] [ BIBTEX FILE(S) ]

	OPTIONS:

	============
	General
	============

			display the help message

	vm		v(iew) m(yself), i.e., edit this script
	
EOF
# }}}
# script-specific {{{
cat << EOF
	============

	rm *		remove:
				k 	 	keywords 

	v		view:
				abs 	 	abstract 
				
	l		list:

REMARKS:
DEFAULTS:
	bib-file:
		$bfile
USAGE EXAMPLES:
	$this_script rm k repdoc.bib 
			remove all keywords from repdoc.bib

AUTHOR: O. Poplavskyy
=============================================
EOF
# }}}
}

[ -z "$*" ] && ( dhelp; exit 0 )

# }}}

main(){
# {{{

case "$1" in
  "")
  ;;
  verr) bt.pl --infile $bfile --list keys  >& n; cat n | awk '/error/' >& $bfile.err; v err ;;
  vwarn) bt.pl --list keys --infile $bfile >& n; cat n | awk '/warning/' >& $bfile.warn; v warn ;;
  lk) bt.pl --list keys --infile $bfile | sort > bib.pkeys.i.dat; cat bib.pkeys.i.dat ;;
  la) bt.pl --list authors | sort > bib.auth.i.dat; cat bib.auth.i.dat ;;
esac    # --- end of case ---

# }}}
}

# main part 
# {{{

script_opts=( $* )

while [ ! -z "$1" ]; do
  	case "$1" in
		  #{{{
	  	vm) $v $0 $fsh $shd/$this_script.pl; exit ;;
		h) dhelp $*; exit ;;
	  	*) main $* && exit 0 ;;
	esac
  	shift
        #}}}
done

# }}}
