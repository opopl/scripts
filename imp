
#!/usr/bin/env bash

# sbvars() dhelp() {{{

sbvars(){
# {{{
s_purpose=" ... script purpose ..."
s_project=" ~/scripts"

# name of this script 
export this_script=` basename $0 `
# directory where this script resides
export shd="`dirname $(readlink -f $0)`"
# shell functions file
export fsh="$hm/scripts/f.sh"
# directory where this script looks for files
# which it has to improve
export dir=$shd

vim_opts="-n -p"
v="vim $vim_opts"
gitdirs=( "config" "scripts" "templates" "vrt" "install" "coms" "cit" )

# }}}
}

sbvars
source $fsh

dhelp(){
# {{{
# general beginning part {{{
cat << EOF
=============================================
SCRIPT NAME: $this_script 
PROJECT: $s_project
PURPOSE: $s_purpose
USAGE: $this_script [ OPTIONS ] 

	OPTIONS:

	============
	General
	============

			display the help message

	vm		v(iew) m(yself), i.e., edit this script
	-g		gvim invocation
	
	============
EOF
# }}}
# actual interesting part {{{
cat << EOF

	-d DIR	- 	directory where to look for files
	-f FILE	-	specify filename to be improved
	-a		-	all files in the directory

DEFAULTS:
	directory where to search for files:
		$dir

EOF
# }}}
# final general part {{{
cat << EOF
REMARKS:
AUTHOR: O. Poplavskyy
SCRIPT LOCATION:
	$0
=============================================
EOF
# }}}
# }}}
}

[ -z "$*" ] && ( dhelp; exit 0 )

#}}}

main(){
# read cmd args {{{

while [ ! -z "$1" ]; do 
	case "$1" in
	  -a) files=( ` ack $dir -f -n ` ) 
	  		for f in ${files[@]}; do 
			  	eoos "Improving file: $f"
				scr_nice.pl --infile $f
			done
	  ;;
	  -f) f=$2; shift; scr_nice.pl --infile $f
			  	eoos "Improving file: $f"
				;;
	  -d) export dir=$2; shift ;;
	  *) ;;
	esac    
	shift
done

# }}}
}

# main part 
# {{{

script_opts=( $* )

# read cmd args => main()  {{{
while [ ! -z "$1" ]; do
  	case "$1" in
		  #{{{
	  	vm) $v $0 $fsh; exit ;;
		h) dhelp $*; exit ;;
		-g) v="$v -g" ;;
	  	*) main $* && exit 0 ;;
	esac
  	shift
        #}}}
done

# }}}


