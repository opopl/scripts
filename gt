#!/bin/bash
 
# directory where this script resides
export shd="`dirname $(readlink -f $0)`"
# name of this script 
export this_script=` basename $0 `
source $shd/f.sh

vim_opts="-n -p"
v="vim $vim_opts"
logf=gt.log

display_help(){
# {{{
cat << EOF
=============================================
SCRIPT NAME: $this_script 
PROJECT: scripts 
PURPOSE: deal with git commands
USAGE: $this_script [ OPTIONS ] 

	OPTIONS:

	============
	General
	============

			display the help message

	vm		v(iew) m(yself), i.e., edit this script
	
	============

	l 		git log
	s		git status
	sm		git status for modified & new files
	c		git commit -a 
	u		git pull
	a		git add

	============
	SVN 
	============

	sv		git svn
	svr, sv rb	git svn rebase
	svl		git svn log


REMARKS:
AUTHOR: O. Poplavskyy
=============================================
EOF
# }}}
}

[ -z "$*" ] && ( display_help; exit 0 )

main(){
# {{{

case $1 in 
  	# base git commands {{{
 	a) shift; git add $* ;;
	u) git pull ;;
	c) git commit -a ;;
	st) git status | less ;;
	l) shift; git log $* ;;
	sm) $0 s | awk '$0 ~ /modified:/ || $0 ~ /new file:/' ;;
	# }}}
	# SVN {{{
	sv) shift;
       		case $1 in 
	  		rb) shift; git svn rebase $* ;;
			*) git svn $* ;;
	        esac
	      ;;
	svl) shift; git svn log $* ;;
	svr) shift; echo "git svn rebase $* `date_dm_hm`" >> $logf
		echo "{{{" >> $logf
		git svn rebase $* >> $logf  
		git svn rebase $* 2>> $logf  
		echo "}}}" >> $logf
		;;
	svf) shift; git svn fetch $* ;;
	# }}}
	# viewing: gt v ... {{{
	v) 
	shift
	case $1 in
	  	log) files=( $logf ) ;;
	esac
	$v ${files[@]}
	;;
	# }}}
	# removing: gt rm ... {{{
	rm) shift
		case $1 in 
		  	log) rm -rf $logf ;;
		esac
	;;
        # }}}	
	# cloning  {{{
	cl) 
		repo=$2; rdir=$hm/$repo ; shift 
		case "$repo" in 
		  	p) url=/media/7CFA-4F67/$repo ;;
		esac
		mkdir -p $rdir
		git clone $url $rdir
	;;
	#}}}
esac	

# }}}
}

# main part 
# {{{

script_opts=( $* )

while [ ! -z "$1" ]; do
  	case "$1" in
		  #{{{
	  	vm) $v $0 $shd/f.sh; exit ;;
		h) display_help $*; exit ;;
	  	*) main $* && exit 0 ;;
	esac
  	shift
        #}}}
done

# }}}


