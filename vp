#!/usr/bin/env bash
 
# dhelp() sbvars() {{{

sbvars(){
# {{{

# directory where this script resides
export shd="`dirname $(readlink -f $0)`"
# name of this script 
export this_script=` basename $0 `
# shell functions file
export fsh="$hm/scripts/f.sh"

vim_opts="-n -p"
#vim_opts="$vim_opts -g" 
v="vim $vim_opts"
repos=( "config" "scripts" "templates" "vrt" "install" "doc-coms" "doc-cit" )

s_purpose="view paper's tex source"
s_project="~/scripts"
# }}}
}

sbvars

dhelp(){
# {{{
# general beginning part {{{
cat << EOF
=============================================
SCRIPT NAME: $this_script 
PROJECT: $s_project
PURPOSE: $s_purpose
USAGE: $this_script [ OPTIONS ] 

	OPTIONS:

	============
	General
	============

			display the help message

	vm		v(iew) m(yself), i.e., edit this script
	-g		gvim invocation
	
	============
EOF
# }}}
# actual interesting part {{{
cat << EOF

EOF
# }}}
# final general part {{{
cat << EOF
REMARKS:
AUTHOR: O. Poplavskyy
SCRIPT LOCATION:
	$0
=============================================
EOF
# }}}
# }}}
}
#}}}

[ -z "$*" ] && ( dhelp; exit 0 )

main(){
# {{{

ptexdir="$hm/wrk/p/"

case "$1" in
  -s) 
  		eoos "-s: using the short key..."
  		if [ ! -z "$2" ]; then  
 			 pkey=$2; shift 
	   		 pkey="$1" 
			 lkey=`long_pap_key $pkey`
			 $0 $opt $lkey
		#else
              #eoor "-s: using the short key..."
		fi
		;;
  	*) pkey=$1 ;;
esac    

files=( ` find $ptexdir -name p.$pkey\*.\*.tex -o -name p.$pkey\*.tex | sed '/\.eq\./d'` \
	pap-nc.0.tex pap-preamble.0.tex \ 
	`find $ptexdir -name up.$pkey\*.i.dat ` \ 
	`find $ptexdir -name bibt.$pkey\*.tex ` \ 
	`find $ptexdir -name p.$pkey.*.dat ` ) 

$v ${files[@]}

# }}}
}

# main part 
# {{{

script_opts=( $* )

while [ ! -z "$1" ]; do
  	case "$1" in
		  #{{{
	  	vm) $v $0 $fsh; exit ;;
		h) dhelp $*; exit ;;
		-g) v="$v -g" ;;
	  	*) main $* && exit 0 ;;
	esac
  	shift
        #}}}
done

# }}}
