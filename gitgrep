#!/usr/bin/env bash
 
# directory where this script resides
export shd="`dirname $(readlink -f $0)`"
# name of this script 
export this_script=` basename $0 `

vim_opts="-n -p"
v="vim $vim_opts"
repos=( "config" "scripts" "templates" "vrt" "install" "doc-coms" "doc-cit" )

sbdirs(){
# {{{
# main Wales group software directory
export wg_dir="$shd/../../"
packdir=$HOME/arch/packed
unpackdir=$HOME/arch/unpacked
# }}}
}


sbvars(){
# {{{
s_purpose="grep ..."
s_project="~/scripts"
# }}}
}

sbvars

dhelp(){
# {{{
# general beginning part {{{
cat << EOF
=============================================
SCRIPT NAME: $this_script 
PROJECT: $s_project
PURPOSE: $s_purpose
USAGE: $this_script  OPT PAT 

	OPTIONS:

	============
	General
	============

			display the help message

	vm		v(iew) m(yself), i.e., edit this script
	
	============

	lf		list of files which contain specified PAT (pattern) 
	lcf 		list files with conflicts, i.e., which contain
				<<<<<<< HEAD
EOF
# }}}
# actual interesting part {{{
cat << EOF

some option

EOF
# }}}
# final general part {{{
cat << EOF
REMARKS:
AUTHOR: O. Poplavskyy
=============================================
EOF
# }}}
# }}}
}

[ -z "$*" ] && ( dhelp; exit 0 )

main(){
# {{{

opt=$1
pat=$2
head="<<<<<<< HEAD"

exts=( *.f *.f90 *.F )

case "$1" in
  lf) fgrep -m1 -iR $pat ${exts[@]}  | awk -F ':' '{ print $1 } END { print NR}' ;;
  lcf) $0 lf "$head" ;;
  *) ;;
esac    # --- end of case ---

# }}}
}

# main part 
# {{{

script_opts=( $* )
sbdirs

while [ ! -z "$1" ]; do
  	case "$1" in
		  #{{{
	  	vm) $v $0; exit ;;
		h) dhelp $*; exit ;;
	  	*) main $* && exit 0 ;;
	esac
  	shift
        #}}}
done

# }}}
